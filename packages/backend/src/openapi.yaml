openapi: 3.0.0
info:
  title: Image Processor API
  version: '1.0.0'
  description: API for uploading, processing, and managing images.

servers:
  - url: http://localhost:3000 # Development server
    description: Local development server
  # Add other server URLs like staging or production if needed

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: User ID (usually Google ID).
        email:
          type: string
          format: email
        name:
          type: string
          nullable: true
        # photoUrl: 
        #   type: string
        #   format: url
        #   nullable: true
    ImageMetadata:
      type: object
      required:
        - id
        - userId
        - fileName
        - gcsPath
        - contentType
        - size
        - uploadTimestamp
        - status
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the image metadata.
        userId:
          type: string
          description: ID of the user who uploaded the image.
        fileName:
          type: string
          description: Original name of the uploaded file.
        gcsPath:
          type: string
          description: Path to the image file in Google Cloud Storage (e.g., gs://bucket-name/path/to/image.jpg).
        contentType:
          type: string
          description: MIME type of the image (e.g., image/jpeg).
        size:
          type: integer
          format: int64
          description: Size of the image in bytes.
        uploadTimestamp:
          type: string
          format: date-time
          description: Timestamp of when the image was uploaded.
        status:
          type: string
          enum: [uploaded, processing, processed, failed]
          description: Current status of the image processing.
        signedUrl:
          type: string
          format: url
          description: A temporary signed URL to access/view the processed image (if available).
          nullable: true
        thumbnailPath:
          type: string
          description: GCS path to the generated thumbnail (if processed).
          nullable: true
        thumbnailSignedUrl:
          type: string
          format: url
          description: A temporary signed URL to access/view the thumbnail (if available).
          nullable: true

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionId # Name of the session cookie used by @fastify/session

security:
  - cookieAuth: []

paths:
  /api/auth/google:
    get:
      summary: Initiate Google OAuth2 login
      description: Redirects the user to Google for authentication.
      tags:
        - Authentication
      responses:
        '302':
          description: Redirect to Google OAuth2 consent screen.
        '500':
          description: Server error if OAuth credentials are not configured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/google/callback:
    get:
      summary: Google OAuth2 callback
      description: Handles the callback from Google after authentication. Sets session cookie on success.
      tags:
        - Authentication
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: The authorization code from Google.
        - name: state
          in: query
          required: false # Depending on your OAuth flow, state might be optional or required
          schema:
            type: string
          description: An opaque value used to maintain state between the request and the callback.
      responses:
        '302':
          description: Redirect to frontend dashboard on successful login.
        '400':
          description: Bad Request (e.g., missing code).
        '500':
          description: Internal Server Error.

  /api/auth/logout:
    post:
      summary: Logout user
      description: Destroys the current session, effectively logging out the user.
      tags:
        - Authentication
      security:
        - cookieAuth: [] # Requires active session
      responses:
        '200':
          description: Successfully logged out.
        '400':
          description: Bad request, e.g., user not logged in.
        '500':
          description: Internal server error during logout.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/images/upload:
    post:
      summary: Upload an image
      description: Uploads an image file to be processed. Requires authentication.
      tags:
        - Images
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The image file to upload (jpeg, png, gif).
      responses:
        '201':
          description: Image uploaded successfully, metadata returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageMetadata'
        '400':
          description: Bad Request (e.g., no file, invalid file type).
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error during upload.

  /api/images:
    get:
      summary: List user's images
      description: Retrieves a list of images (metadata) uploaded by the authenticated user.
      tags:
        - Images
      security:
        - cookieAuth: []
      responses:
        '200':
          description: A list of image metadata.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageMetadata'
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

# Placeholder for GET /api/images
# /api/images:
#   get:
#     summary: List user's images
#     description: Retrieves a list of images uploaded by the authenticated user.
#     tags:
#       - Images
#     security:
#       - cookieAuth: []
#     responses:
#       '200':
#         description: Successfully retrieved list of images.
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/ImageMetadata'
#       '401':
#         description: Unauthorized.
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/ErrorResponse' 